@model CarpoolingCR.Objects.Responses.TripEditResponse

@{
    ViewBag.Title = "Edit";
}

<h3>Viajes</h3>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />

@using (Html.BeginForm())
{
    @*<label id="TripId" name="TripId" style="visibility:hidden"></label>
    <label id="ApplicationUserId" name="ApplicationUserId" style="visibility:hidden"></label>
    <input type="hidden" id="hiddenOption1" />
    <input type="hidden" id="hiddenOption2" />*@

    @Html.TextBoxFor(m => m.Trip.TripId, new { @class = "form-control", @Value = "", style = "display: none;" })
    @Html.TextBoxFor(m => m.Trip.ApplicationUserId, new { @class = "form-control", @Value = "", style = "display: none;" })
    @Html.TextBoxFor(m => m.Trip.CreatedTime, new { @class = "form-control", @Value = "", style = "display: none;" })

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row form-group">
            <div class="col-lg-2 col-md-2 col-sm-2 col-xs-12">
                <label class="control-label" style="text-align:left">Origen</label>
            </div>
            <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                <select id="FromTown" name="FromTown" class="form-control">
                    @{
                        foreach (var item in Model.Towns)
                        {
                            if (Model.Trip.FromTown == item.Name)
                            {
                                <option value="@item.Name" selected>@item.Name</option>
                            }
                            else
                            {
                                <option value="@item.Name">@item.Name</option>
                            }
                        }
                    }
                </select>
            </div>
            <div class="col-lg-2 col-md-2 col-sm-2 col-xs-12">
                <label class="control-label" style="text-align:left">Destino</label>
            </div>
            <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                <select id="ToTown" name="ToTown" class="form-control">
                    @{
                        foreach (var item in Model.Towns)
                        {
                            if (Model.Trip.ToTown == item.Name)
                            {
                                <option value="@item.Name" selected>@item.Name</option>
                            }
                            else
                            {
                                <option value="@item.Name">@item.Name</option>
                            }
                        }
                    }
                </select>
            </div>
        </div>

        <div class="row form-group">
            <div class="col-lg-2 col-md-2 col-sm-2 col-xs-12">
                <label class="control-label" style="text-align:left">Fecha</label>
            </div>
            <div class="col-lg-10 col-md-10 col-sm-10 col-xs-12">
                <input id="DateTime" name="DateTime" class="form-control" type="text" value="" onfocus="blur();">
                @Html.ValidationMessageFor(model => model.Trip.DateTime, "", new { @class = "text-danger col-lg-10 col-md-10 col-sm-12 col-xs-12" })
            </div>
        </div>

        <div class="row form-group">
            <div class="col-lg-2 col-md-2 col-sm-2 col-xs-12">
                <label class="control-label" style="text-align:left">Espacios</label>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                <input id="TotalSpaces" class="" style="width:40px;" name="TotalSpaces" value="@{Model.Trip.TotalSpaces.ToString();} " onfocus="blur();">
                @Html.ValidationMessageFor(model => model.Trip.TotalSpaces, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-2 col-md-2 col-sm-2 col-xs-12">
                <label class="control-label" style="text-align:left">Disponibles</label>
            </div>
            <div class="col-lg-5 col-md-5 col-sm-5 col-xs-12">
                <input id="AvailableSpaces" class="" style="width:40px;" name="AvailableSpaces" onfocus="blur();">
                @Html.ValidationMessageFor(model => model.Trip.AvailableSpaces, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row form-group">
            <div class="col-lg-2 col-md-2 col-sm-2 col-xs-12">
                <label class="control-label" style="text-align:left">Cuota</label>
            </div>
            <div class="col-lg-10 col-md-10 col-sm-10 col-xs-12">
                @Html.EditorFor(model => model.Trip.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Trip.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group hidden">
            @Html.LabelFor(model => model.Trip.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Trip.Status, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Trip.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("<<", "Index", new { }, new { @class = "btn btn-primary" }) <input type="submit" value="Salvar" class="btn btn-info pull-right" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    $('#FromTown').editableSelect();
    $('#ToTown').editableSelect();

    //LoadRouteOptions();

    $('#DateTime').datetimepicker({
        mask: false,
        //format: 'd/m/Y g:i a',
        formattedDate: 'd/m/Y',
        //formatTime: 'g:i a',
        step: 15,
        lazyInit: false,
        hours12: false,
        initTime: false,
        onChangeDateTime: function (current_time, $input) {
            $('#TotalSpaces').focus();
        }
    });

    $('#TotalSpaces').spinner({
        min: 1,
        max: 5,
        stop: function (e, ui) {
            $('#AvailableSpaces').val($('#TotalSpaces').val())
        }
    }).val(1);

    $('#AvailableSpaces').spinner({
        min: 0,
        max: 5,
        stop: function (e, ui) {
            if ($('#AvailableSpaces').val() > $('#TotalSpaces').val()) {
                $('#AvailableSpaces').val($('#TotalSpaces').val());
            }
        }
    }).val(1);

    //$("#radioset").buttonset();

    //$('#JourneyId').change(function () {
    //    LoadRouteOptions();
    //});


    function SetRouteOption(index) {
        var selectedOption = $('#hiddenOption' + index).val();

        $('#RouteDetail').val(selectedOption);
    }

    //function LoadRouteOptions() {
    //    var split = $("#JourneyId :selected").text().split(' < - > ');

    //    $('#RouteDetail').val(split[0]);

    //    $('#hiddenOption1').val(split[0]);
    //    $('#hiddenOption2').val(split[1]);

    //    $('#lblPlace1').html('<span class="ui-checkboxradio-icon ui-corner-all ui-icon ui-icon-background ui-icon-blank"></span><span class="ui-checkboxradio-icon-space"> </span>' + split[0]);
    //    $('#lblPlace2').html('<span class="ui-checkboxradio-icon ui-corner-all ui-icon ui-icon-background ui-icon-blank ui-state-hover"></span><span class="ui-checkboxradio-icon-space"> </span>' + split[1]);
    //}

    $(document).ready(function () {
        var tripId = @Html.Raw(Json.Encode(Model.Trip.TripId));
        var appUserId = @Html.Raw(Json.Encode(Model.Trip.ApplicationUserId));

        $('#Trip_TripId').val(tripId);
        $('#Trip_ApplicationUserId').val(appUserId);

        var date = new Date(@Html.Raw(Json.Encode(Model.Trip.DateTime.ToString())));
        var formattedDate = (("0" + date.getDate()).slice(-2) + '/' + ("0" + (date.getMonth() + 1)).slice(-2) + '/' + date.getFullYear() + ' ' + date.getHours() + ':' + ("0" + date.getMinutes()).slice(-2));

        $('#DateTime').val(formattedDate);
        $('#TotalSpaces').val(@Html.Raw(Json.Encode(Model.Trip.TotalSpaces)));
        $('#AvailableSpaces').val(@Html.Raw(Json.Encode(Model.Trip.AvailableSpaces)));

        var from = @Html.Raw(Json.Encode(Model.Trip.FromTown));
        var to = @Html.Raw(Json.Encode(Model.Trip.ToTown));

        //$('#RouteDetail').val(split[0]);

        //$('#hiddenOption1').val(split[0]);
        //$('#hiddenOption2').val(split[1]);

        //$('#lblPlace1').html('<span class="ui-checkboxradio-icon ui-corner-all ui-icon ui-icon-background ui-icon-blank"></span><span class="ui-checkboxradio-icon-space"> </span>' + split[0]);
        //$('#lblPlace2').html('<span class="ui-checkboxradio-icon ui-corner-all ui-icon ui-icon-background ui-icon-blank ui-state-hover"></span><span class="ui-checkboxradio-icon-space"> </span>' + split[1]);

        //if (to == split[0]) {
        //    $("#ckPlace1").attr('checked', 'checked');
        //    $('#lblPlace1').attr('class', 'ui-button ui-widget ui-checkboxradio-radio-label ui-controlgroup-item col-lg-6 col-md-6 col-sm-6 col-xs-12 ui-checkboxradio-label ui-corner-right ui-checkboxradio-checked ui-state-active')
        //} else {
        //    $("#ckPlace2").attr('checked', 'checked');
        //    $('#lblPlace2').attr('class', 'ui-button ui-widget ui-checkboxradio-radio-label ui-controlgroup-item col-lg-6 col-md-6 col-sm-6 col-xs-12 ui-checkboxradio-label ui-corner-right ui-checkboxradio-checked ui-state-active')
        //}

        $('#DateTime').value = @Html.Raw(Json.Encode(Model.Trip.DateTime.ToString()));

    });
</script>