@model CarpoolingCR.Models.RegisterViewModel
@{
    /**/

    ViewBag.Title = "Register";
}
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
<br />
<div class="row form-group" style="text-align:center">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <h5 class="panel-title pull-left">Registro de Usuarios</h5>
    </div>
</div>
<div class="row" style="text-align:center">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <hr />
    </div>
</div>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "RegisterForm" }))
{
    @Html.TextBoxFor(m => m.UserType, new { @class = "form-control", @Value = "Pasajero", style = "display: none;" })
    @Html.AntiForgeryToken()
    <input type="text" id="registeredUserPicture" name="registeredUserPicture" class="hidden" />
    <input type="text" id="referencedUser" name="referencedUser" class="hidden" value="@ViewBag.ReferencedUser" />
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control emailvalidation", placeholder = "Correo Electrónico" })
        </div>
    </div>
    <div class="form-group">
        <label class="col-md-2 control-label">contraseña</label>
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "contraseña" })
        </div>
    </div>
    <div class="form-group">
        <label class="col-md-2 control-label">Confirmación</label>
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Confirmación de contraseña" })
        </div>
    </div>
    <div class="form-group">
        <label class="col-md-2 control-label">País</label>
        <div class="col-md-10">
            @{
                if (ViewBag.CountryId != null)
                {
                    @Html.DropDownList("CountryId", (SelectList)ViewBag.CountryId, htmlAttributes: new { @class = "form-control" })
                }
            }
        </div>
    </div>
    <div class="row form-group">
        <label class="col-md-2 control-label">Tipo de Usuario</label>
        <div id="radioset" role="toolbar" class="ui-controlgroup ui-controlgroup-horizontal ui-helper-clearfix col-md-10">
            <div class="input-group" onclick="CheckChange(false)">
                <span class="input-group-addon" style="border-radius: 10px 0px 0px 10px">
                    <input type="radio" id="rbPassenger" onclick="CheckChange(false);" name="userTypeGroup" aria-label="..." checked>
                </span>
                <label class="form-control" aria-label="..." style="width:240px; border-radius: 0px 10px 10px 0px"><span class="glyphicon glyphicon-user"></span> Pasajero</label>
            </div>
            <br />
            <div class="input-group" onclick="CheckChange(true)">
                <span class="input-group-addon" style="border-radius: 10px 0px 0px 10px">
                    <input type="radio" id="rbDriver" onclick="CheckChange(true);" name="userTypeGroup" aria-label="...">
                </span>
                <label class="form-control" aria-label="..." style="width:240px;border-radius: 0px 10px 10px 0px"><span class="glyphicon glyphicon-road"></span> Conductor</label>
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.UserIdentification, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.UserIdentification, new { @class = "form-control", placeholder = "Cédula" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Name, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "Nombre" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", placeholder = "Primer Apellido" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.SecondLastName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.SecondLastName, new { @class = "form-control", placeholder = "Segundo Apellido" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Birthday, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Birthday, new { @class = "form-control", placeholder = "dd/mm/yyyy" })
        </div>
    </div>
    <div class="form-group">
        @*todo*@
        @Html.LabelFor(m => m.Phone1, new { @class = "col-md-2 control-label" })@*<a href="#" data-toggle="tooltip" class="btn btn-sm btn-default" style="border-radius:10px" title="El teléfono será punto principal de contacto con las personas en una reserva de viaje">?</a>*@
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Phone1, new { @class = "form-control", placeholder = "####-####" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Phone2, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Phone2, new { @class = "form-control", placeholder = "####-####" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="button" class="btn btn-info" value="Registrar" onclick="checkFields()" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    $(document).ready(function () {
        var image = SetRandomImage();

        $('#registeredUserPicture').val(image);
    });

    $('#Birthday').datetimepicker({
        mask: false,
        format: 'd/m/Y',
        timepicker: false,
        dates: 'ru'
    });

    $('#SecondLastName').attr('data-val', false);
    $('#Phone2').attr('data-val', false);
    $('#FacebookAccount').attr('data-val', false);
    $('#Birthday').attr('data-val', false);

    function SetUserType(type) {
        document.getElementById('UserType').value = type;
    }

    $('#Phone1').mask('0000-0000');
    $('#Phone2').mask('0000-0000');
    $('#UserIdentification').mask('000000000');

    function CheckChange(isDriver) {
        if (isDriver) {
            $("#rbDriver").prop("checked", true);

            SetUserType('Conductor');
        } else {
            $("#rbPassenger").prop("checked", true);

            SetUserType('Pasajero');
        }
    }

    function checkFields() {
        var email = $('#Email').val().trim();
        var pwd = $('#Password').val().trim();
        var country = $('#CountryId').val();
        var pwdConfirmation = $('#ConfirmPassword').val().trim();
        var isDriver = false;

        $('#Email').val(email);

        if (!validateEmail(email)) {
            DisplayGrowlMessage("¡Correo Electrónico inválido!", "warn")

            return;
        }

        if (pwd == '') {
            DisplayGrowlMessage("¡Contraseña requerida!", "warn")

            return;
        } else if (pwdConfirmation == '') {
            DisplayGrowlMessage("¡Confirmación de Contraseña requerida!", "warn")

            return;
        } else if (country == '') {
            DisplayGrowlMessage("¡País requerido!", "warn")

            return;
        } else if (pwd != pwdConfirmation) {
            DisplayGrowlMessage("¡Clave y confirmación de clave no concuerdan!", "warn")

            return;
        } else if (pwd.length < 6) {
            DisplayGrowlMessage("¡La clave debe contener al menos 6 caracteres y dígitos!", "warn")

            return;
        }

        var selectedUser = $('input[name=userTypeGroup]:checked', '#RegisterForm').add('id');

        if (selectedUser.length == 0) {
            DisplayGrowlMessage("¡Tipo de usuario requerido!", "warn")

            return;
        } else {
            var currentUserControlId = selectedUser[0].id;

            if (selectedUser.id == 'rbDriver') {
                isDriver = true;
            }
        }

        var UserIdentification = $('#UserIdentification').val();
        var Name = $('#Name').val();
        var LastName = $('#LastName').val();
        var Phone1 = $('#Phone1').val();

        if (UserIdentification == '') {
            DisplayGrowlMessage("¡Número de cédula requerido!", "warn")

            return;
        } else if (Name == '') {
            DisplayGrowlMessage("¡Nombre Requerido!", "warn")

            return;
        } else if (LastName == '') {
            DisplayGrowlMessage("¡Primer apellido requerido!", "warn")

            return;
        } else if (Phone1 == '') {
            DisplayGrowlMessage("¡Número de celular requerido!", "warn")

            return;
        }

        $("#RegisterForm").submit();
    }
</script>